openapi: 3.0.1
info:
  title: api-education-finder
  contact: { }
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: "3.1"
servers:
  - url: http://localhost:55216
    description: Generated server url
tags:
  - name: Courses
    description: Find courses
  - name: Statistics
    description: Get statistics
paths:
  /{municipalityId}/statistics:
    get:
      tags:
        - Statistics
      description: |
        Find statistics based on the provided parameters.

        Filter parameters:
        - categories: Which categories to include in the statistics. Parameter filter strategy: IN-IGNORE-CASE. The parameter can be provided multiple times to specify multiple values. Example usage: ?categories=Teknik&categories=Bygg%20och%20anläggning
        - subcategories: Which subcategories to include in the statistics. Parameter filter strategy: IN-IGNORE-CASE. The parameter can be provided multiple times to specify multiple values. Example usage: ?subcategories=fysik&subcategories=matematik
        - levels: Which levels to include in the statistics. Parameter filter strategy: IN-IGNORE-CASE. The parameter can be provided multiple times to specify multiple values. Example usage: ?levels=gymnasial%20vuxenutbildning&levels=grundläggande%20vuxenutbildning
        - studyLocations: Which study locations to include in the statistics. Parameter filter strategy: IN-IGNORE-CASE. The parameter can be provided multiple times to specify multiple values. Example usage: ?studyLocations=Sundsvall&studyLocations=Östersund
        - scopes: Which scopes to include in the statistics. Parameter filter strategy: IN-IGNORE-CASE. The parameter can be provided multiple times to specify multiple values. Example usage: ?scopes=100&scopes=75
        - startDate: The start date of the statistics. 'startDate' is used in parallel with 'endDate' to form a period. Parameter filter strategy: WITHIN-OR-EQUAL. Example usage: ?startDate=2025-01-01
        - endDate: The end date of the statistics. 'endDate' is used in parallel with 'startDate' to form a period. Parameter filter strategy: WITHIN-OR-EQUAL. Example usage: ?endDate=2025-12-31

        Parameter filter strategies:
        - IN-IGNORE-CASE: Accepts a list of values separated by comma. The parameter value must have an exact match, case insensitive.
        - WITHIN-OR-EQUAL: The parameter value must be within the range of the searched attribute or equal to it. Example - startDate=2025-01-01, endDate=2025-12-31: The statistics will include all courses that have a start date between(inclusive) 2025-01-01 and 2025-12-31.

        Returned statistics:
        - OnGoingCourses: Number of courses which pass the filter parameters and have a start date before the given 'startDate' and after the given 'endDate'.
        - PlannedCourses: Number of courses which pass the filter parameters and have a start date after the given 'startDate' and before the given 'endDate'.
        - FinishedCourses: Number of courses which pass the filter parameters and have an end date after the given 'startDate' and before the given 'endDate'.
        - AvailableSeats: Number of available seats for all courses which pass the filter parameters and have a start date after the given 'startDate' and before the given 'endDate'.
        - TotalCapacity: Total capacity for all courses which pass the filter parameters and have a start date after the given 'startDate' and before the given 'endDate'.

        Important notes:
        - All date parameters are expected to be on the format: yyyy-MM-dd (example value: '2025-01-01')
      operationId: getStatistics
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: categories
          in: query
          description: List of categories
          required: false
          schema:
            type: array
            description: List of categories
            example: Medicin och vård
            items:
              type: string
              description: List of categories
              example: Medicin och vård
          example: Medicin och vård
        - name: subCategories
          in: query
          description: List of sub categories
          required: false
          schema:
            type: array
            description: List of sub categories
            example: PSYKOTERAPI
            items:
              type: string
              description: List of sub categories
              example: PSYKOTERAPI
          example: PSYKOTERAPI
        - name: levels
          in: query
          description: List of levels
          required: false
          schema:
            type: array
            description: List of levels
            example: gymnasial vuxenutbildning
            items:
              type: string
              description: List of levels
              example: gymnasial vuxenutbildning
          example: gymnasial vuxenutbildning
        - name: studyLocations
          in: query
          description: List of study locations
          required: false
          schema:
            type: array
            description: List of study locations
            example: Sundsvall
            items:
              type: string
              description: List of study locations
              example: Sundsvall
          example: Sundsvall
        - name: scopes
          in: query
          description: List of scopes
          required: false
          schema:
            type: array
            description: List of scopes
            example: "25, 50, 75"
            items:
              type: integer
              description: List of scopes
              format: int32
          example: "25, 50, 75"
        - name: startDate
          in: query
          description: Start date
          required: true
          schema:
            type: string
            description: Start date
            format: date
            example: 2024-01-01
          example: 2024-01-01
        - name: endDate
          in: query
          description: End date
          required: true
          schema:
            type: string
            description: End date
            format: date
            example: 2024-12-31
          example: 2024-12-31
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Statistics"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Statistics"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/statistics/filters/{filterAttribute}/values:
    get:
      tags:
        - Statistics
      summary: Find available filter values
      operationId: findFilterValues
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: filterAttribute
          in: path
          description: The attribute name to get available values from
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            application/problem+json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/courses:
    get:
      tags:
        - Courses
      summary: Find course
      description: |
        Find courses and apply filters to narrow the result.

        Pagination parameters:
        - page: One-based page index (1..N)
        - limit: The size of the page to be returned
        - sortBy: Accepts a list of values separated by comma. The result is firstly sorted by the first values, followed by the next value.
        - sortDirection: The sort direction. Possible values: 'ASC' or 'DESC'. Case sensitive.
        - Example usage: ?page=1&limit=10&sortBy=credits,category&sortDirection=ASC
        - Example explanation: The example will return the first page with 10 courses sorted by credits in ascending order, followed by category in ascending order.

        Filter parameters:
        - studyLocations: The course study location. Parameter filter strategy: 'IN-IGNORE-CASE'. The parameter can be provided multiple times to specify multiple values. Example usage: ?studyLocations=Sundsvall&studyLocations=Östersund
        - scopes: The course scope in percent. Parameter filter strategy: 'IN-IGNORE-CASE'. The parameter can be provided multiple times to specify multiple values. Example usage: ?scopes=100&scopes=75
        - levels: The course level. Parameter filter strategy: 'IN-IGNORE-CASE'. The parameter can be provided multiple times to specify multiple values. Example usage: ?levels=gymnasial%20vuxenutbildning&levels=grundläggande%20vuxenutbildning
        - categories: The course category. Parameter filter strategy: 'IN-IGNORE-CASE'. The parameter can be provided multiple times to specify multiple values. Example usage: ?categories=Teknik&categories=Bygg%20och%20anläggning
        - code: The course code. Parameter filter strategy: 'EQUAL-IGNORE-CASE'. Example value: 'PRRPRR02'
        - name: The course name. Parameter filter strategy: 'EQUAL-IGNORE-CASE'. Example value: 'Programmering'
        - provider: The course provider. Parameter filter strategy: 'EQUAL-IGNORE-CASE'. Example value: 'Sundsvalls Kommun'
        - credits: The course credits. Parameter filter strategy: 'EQUAL'. Example value: '150'
        - start: The course start date. Parameter filter strategy: 'EQUAL'. Example value: '2025-01-01'
        - startBefore: A date that occurs before the course start date. Parameter filter strategy: 'EQUAL-OR-LESS-THAN'. Example value: '2020-01-01'
        - startAfter: A date that occurs after the course start date. Parameter filter strategy: 'EQUAL-OR-GREATER-THAN'. Example value: '2020-12-31'
        - end: The course end date. Parameter filter strategy: 'EQUAL'. Example value: '2025-01-01'
        - endBefore: A date that occurs before the course end date. Parameter filter strategy: 'EQUAL-OR-LESS-THAN'. Example value: '2020-01-01'
        - endAfter: A date that occurs after the course end date. Parameter filter strategy: 'EQUAL-OR-GREATER-THAN'. Example value: '2020-12-31'
        - earliestApplication: The course 'earliest application' date. Parameter filter strategy: 'EQUAL'. Example value: '2025-01-01'
        - earliestApplicationBefore: A date that occurs before the course 'earliest application' date. Parameter filter strategy: 'EQUAL-OR-LESS-THAN'. Example value: '2020-01-01'
        - earliestApplicationAfter: A date that occurs after the course 'earliest application' date. Parameter filter strategy: 'EQUAL-OR-GREATER-THAN'. Example value: '2020-12-31'
        - latestApplication: The course 'latest application' date. Parameter filter strategy: 'EQUAL-OR-NULL'. Example value: '2025-01-01'
        - latestApplicationBefore: A date that occurs before the course 'latest application' date. Parameter filter strategy: 'EQUAL-OR-LESS-THAN-OR-NULL'. Example value: '2020-01-01'
        - latestApplicationAfter: A date that occurs after the course 'latest application' date. Parameter filter strategy: 'EQUAL-OR-GREATER-THAN-OR-NULL'. Example value: '2020-12-31'
        - information: The course information. Parameter filter strategy: 'LIKE-IGNORE-CASE'. Example value: 'utbildning till affärsutvecklare'
        - searchString: Search for the parameter value in code, name, category and information attributes. Parameter filter strategy: 'LIKE-IGNORE-CASE'. Example value: 'Programmering'

        Parameter filter strategies:
        - IN-IGNORE-CASE: Accepts a list of values separated by comma. The parameter value must have an exact match, case insensitive.
        - EQUAL: The parameter must have an exact match, case sensitive.
        - EQUAL-OR-NULL: The parameter must have an exact match, case sensitive or be null.
        - EQUAL-IGNORE-CASE: The parameter must have an exact match, case insensitive.
        - LIKE-IGNORE-CASE: The parameter value must occur somewhere in the searched attribute, case insensitive.
        - EQUAL-OR-GREATER-THAN: The parameter value must be equal or greater than the searched attribute.
        - EQUAL-OR-GREATER-THAN-OR-NULL: The parameter value must be equal or greater than the searched attribute or be null.
        - EQUAL-OR-LESS-THAN: The parameter value must be equal or less than the searched attribute.
        - EQUAL-OR-LESS-THAN-OR-NULL: The parameter value must be equal or less than the searched attribute or be null.


        Important notes:
        - All date parameters are expected to be on the format: yyyy-MM-dd (example value: '2025-01-01')
      operationId: find
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: parameters
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/CourseParameters"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedCoursesResponse"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/PagedCoursesResponse"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/courses/{courseId}:
    get:
      tags:
        - Courses
      summary: Find course by id
      operationId: findCourseById
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: courseId
          in: path
          description: The id of the course
          required: true
          schema:
            type: integer
            format: int64
          example: 1234
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Course"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Course"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/courses/filters/{filterAttribute}/values:
    get:
      tags:
        - Courses
      summary: Find available filter values
      description: Find available filter values (for use in the 'find'-resource)
      operationId: findFilterValues_1
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: filterAttribute
          in: path
          description: The attribute name to get available values from
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            application/problem+json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /api-docs:
    get:
      tags:
        - API
      summary: OpenAPI
      operationId: getApiDocs
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: string
      x-auth-type: None
      x-throttling-tier: Unlimited
      x-wso2-mutual-ssl: Optional
components:
  schemas:
    Problem:
      type: object
      properties:
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        status:
          $ref: "#/components/schemas/StatusType"
        detail:
          type: string
        title:
          type: string
    StatusType:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        reasonPhrase:
          type: string
    ConstraintViolationProblem:
      type: object
      properties:
        cause:
          $ref: "#/components/schemas/ThrowableProblem"
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        type:
          type: string
          format: uri
        status:
          $ref: "#/components/schemas/StatusType"
        violations:
          type: array
          items:
            $ref: "#/components/schemas/Violation"
        title:
          type: string
        message:
          type: string
        instance:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        detail:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    ThrowableProblem:
      type: object
      properties:
        cause:
          $ref: "#/components/schemas/ThrowableProblem"
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        message:
          type: string
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        status:
          $ref: "#/components/schemas/StatusType"
        detail:
          type: string
        title:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    Violation:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
    Statistics:
      type: object
      properties:
        onGoingCourses:
          type: integer
          description: Number of on-going courses
          format: int32
          readOnly: true
          example: 10
        plannedCourses:
          type: integer
          description: Number of planned courses
          format: int32
          readOnly: true
          example: 10
        finishedCourses:
          type: integer
          description: Number of finished courses
          format: int32
          readOnly: true
          example: 10
        availableSeats:
          type: integer
          description: Number of available seats
          format: int32
          readOnly: true
          example: 10
        totalCapacity:
          type: integer
          description: Total capacity
          format: int32
          readOnly: true
          example: 10
        studyLocations:
          type: array
          description: Study locations used for filtering
          readOnly: true
          items:
            type: string
            description: Study locations used for filtering
            readOnly: true
        scopes:
          type: array
          description: Scopes used for filtering
          readOnly: true
          items:
            type: integer
            description: Scopes used for filtering
            format: int32
            readOnly: true
        levels:
          type: array
          description: Levels used for filtering
          readOnly: true
          items:
            type: string
            description: Levels used for filtering
            readOnly: true
        categories:
          type: array
          description: Categories used for filtering
          readOnly: true
          items:
            type: string
            description: Categories used for filtering
            readOnly: true
        subCategories:
          type: array
          description: Category ids used for filtering
          readOnly: true
          items:
            type: string
            description: Category ids used for filtering
            readOnly: true
        startDate:
          type: string
          description: Start date used for filtering
          format: date
          readOnly: true
        endDate:
          type: string
          description: End date used for filtering
          format: date
          readOnly: true
      description: Statistics model
      readOnly: true
    CourseParameters:
      type: object
      properties:
        page:
          minimum: 1
          type: integer
          description: Page number
          format: int32
          example: 1
          default: 1
        limit:
          minimum: 1
          type: integer
          description: Result size per page. Maximum allowed value is dynamically
            configured
          format: int32
          example: 15
        sortBy:
          type: array
          items:
            type: string
            description: The properties to sort on
            example: propertyName
        sortDirection:
          $ref: "#/components/schemas/Direction"
        code:
          type: string
          description: Course code
          example: KEMKEM02
        name:
          type: string
          description: Name of the course
          example: Etnicitet och kulturmöten
        provider:
          type: string
          description: Provider of the course
          example: Sundsvalls Kommun
        credits:
          type: string
          description: Course credits
          example: "100"
        information:
          type: string
          description: Information about the course
          example: This is course information
        languageOfInstruction:
          type: string
          description: Language of instruction
          example: Swedish
        searchString:
          type: string
          description: Search string
          example: searchString
        start:
          type: string
          description: Start date of the course
          format: date
          example: 2022-12-31
        startAfter:
          type: string
          description: Start date of the course is after
          format: date
          example: 2022-12-31
        startBefore:
          type: string
          description: Start date of the course is before
          format: date
          example: 2022-12-31
        end:
          type: string
          description: End date of the course
          format: date
          example: 2022-12-31
        endAfter:
          type: string
          description: End date of the course is after
          format: date
          example: 2022-12-31
        endBefore:
          type: string
          description: End date of the course is before
          format: date
          example: 2022-12-31
        earliestApplication:
          type: string
          description: Earliest application date
          format: date
          example: 2022-12-31
        earliestApplicationAfter:
          type: string
          description: Earliest application date is after
          format: date
          example: 2022-12-31
        earliestApplicationBefore:
          type: string
          description: Earliest application date is before
          format: date
          example: 2022-12-31
        latestApplication:
          type: string
          description: Latest application date
          format: date
          example: 2022-12-31
        latestApplicationAfter:
          type: string
          description: Latest application date is after
          format: date
          example: 2022-12-31
        latestApplicationBefore:
          type: string
          description: Latest application date is before
          format: date
          example: 2022-12-31
        scopes:
          type: array
          description: Scope of the course
          example: 75
          items:
            type: integer
            description: Scope of the course
            format: int32
            example: 75
        studyLocations:
          type: array
          description: Study location
          example: Sundsvall
          items:
            type: string
            description: Study location
            example: Sundsvall
        levels:
          type: array
          description: Level of the course
          example: gymnasial vuxenutbildning
          items:
            type: string
            description: Level of the course
            example: gymnasial vuxenutbildning
        categories:
          type: array
          description: Category
          example: Naturvetenskap
          items:
            type: string
            description: Category
            example: Naturvetenskap
        subcategories:
          type: array
          description: Subcategory
          example: Kemi
          items:
            type: string
            description: Subcategory
            example: Kemi
        visitingAddressMunicipalityId:
          type: string
          description: Visiting address municipality ID
          example: "2281"
        placeOfStudyMunicipalityId:
          type: string
          description: Study location municipality ID
          example: "2281"
    Direction:
      type: string
      description: The sort order direction
      example: ASC
      enum:
        - ASC
        - DESC
    Course:
      type: object
      properties:
        id:
          type: integer
          description: Course ID
          format: int64
          readOnly: true
          example: 1
        code:
          type: string
          description: Course code
          readOnly: true
          example: PRRPRR02
        name:
          type: string
          description: Course name
          readOnly: true
          example: Programmering 2
        provider:
          type: string
          description: Course provider
          readOnly: true
          example: Sundsvalls Kommun
        providerUrl:
          type: string
          description: Course provider URL
          readOnly: true
          example: http://sundsvall.se/vuxenutbildning
        level:
          type: string
          description: Course level
          readOnly: true
          example: gymnasial vuxenutbildning
        url:
          type: string
          description: Course URL
          readOnly: true
          example: https://sundsvall.alvis.se/hittakurser/kurs/38837
        credits:
          type: number
          description: Course credits
          format: double
          readOnly: true
          example: 150
        scope:
          type: number
          description: Course scope in percent
          format: double
          readOnly: true
          example: 100
        studyLocation:
          type: string
          description: Study location
          readOnly: true
          example: Sundsvall
        subjectCode:
          type: string
          description: Subject code
          readOnly: true
          example: PRRPRR02
        numberOfSeats:
          type: integer
          description: Number of seats
          format: int32
          readOnly: true
          example: 10
        category:
          type: string
          description: Course category
          readOnly: true
          example: "Ekonomi, marknadsföring och administration"
        subcategory:
          type: string
          description: Course subcategory
          readOnly: true
          example: Administration
        languageOfInstruction:
          type: string
          description: Language of instruction
          readOnly: true
          example: Swedish
        start:
          type: string
          description: Course start date
          format: date
          readOnly: true
          example: 2020-08-31
        end:
          type: string
          description: Course end date
          format: date
          readOnly: true
          example: 2020-12-20
        earliestApplication:
          type: string
          description: Earliest application date
          format: date
          readOnly: true
          example: 2020-01-01
        latestApplication:
          type: string
          description: Latest application date
          format: date
          readOnly: true
          example: 2020-04-15
        information:
          type: string
          description: Course information
          readOnly: true
          example: "<![CDATA[ <p><a href=https://sundsvall.se/utbildning-och-forskola/vuxenutbildning/gymnasial--niva/studieformer-och-schema\
            \ target=_blank>Läs&nbsp;om våra studieformer</a></p><p><br /><a href=https://www.csn.se/\
            \ target=_blank>Läs om studiemedel på&nbsp;www.csn.se</a><br />&nbsp;<br\
            \ />Ditt antagningsbesked<br />Antagningsbesked skickas via e-post cirka\
            \ två veckor före kursstart.&nbsp;<a href=https://sundsvall.alvis.se/>Se\
            \ ditt antagningsbesked och följ din ansökan via Mina sidor</a>.</p> ]]>"
        studyLocationMunicipalityId:
          type: string
          description: Study location municipality ID
          readOnly: true
          example: "2301"
        visitingAddressMunicipalityId:
          type: string
          description: Visiting address municipality ID
          readOnly: true
          example: "2301"
      description: Course model
      readOnly: true
    PagedCoursesResponse:
      type: object
      properties:
        courses:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/Course"
        _meta:
          $ref: "#/components/schemas/PagingMetaData"
      description: Paged course response model
      readOnly: true
    PagingMetaData:
      type: object
      properties:
        page:
          type: integer
          description: Current page
          format: int32
          readOnly: true
          example: 5
        limit:
          type: integer
          description: Displayed objects per page
          format: int32
          readOnly: true
          example: 20
        count:
          type: integer
          description: Displayed objects on current page
          format: int32
          readOnly: true
          example: 13
        totalRecords:
          type: integer
          description: Total amount of hits based on provided search parameters
          format: int64
          readOnly: true
          example: 98
        totalPages:
          type: integer
          description: Total amount of pages based on provided search parameters
          format: int32
          readOnly: true
          example: 23
      description: PagingMetaData model
      readOnly: true
  securitySchemes: { }
